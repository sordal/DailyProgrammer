
def find_pair(input_string, position):
    i = position
    stack = []
    while i <= len(input_string):
        if input_string[i] == '(':
            stack.append(i)
        if input_string[i] == ')':
            stack.pop()
            if not stack:
                return position, i
        i += 1


def index_string(input_value):
    i = 1
    current_list = []
    while i < len(input_value):
        if input_value[i] == '(':
            temp = find_pair(input_value, i)
            if temp not in current_list:
                current_list.append(temp)
        i += 1
    return current_list


def filter_pairs(pairs):
    filter_list = []
    for i in range(len(pairs)):
        if i < len(pairs) - 1:
            if pairs[i][0] == pairs[i + 1][0] - 1 and pairs[i][1] == pairs[i + 1][1] + 1:
                filter_list += pairs[i]
        if pairs[i][0] == pairs[i][1] - 1:
            filter_list += pairs[i]
    return filter_list


challenge_input = ['((a((bc)(de)))f)', '(((zbcd)(((e)fg))))', 'ab((c))']

for element in challenge_input:
    test_input = element
    final_array = index_string(test_input)
    final_array = filter_pairs(final_array)
    test_output = ''
    for i in range(len(test_input)):
        if i not in final_array:
            test_output += test_input[i]
    print(test_output)